"""
Configuration module for Overpass QL Generator

This module contains all configuration values and hardcoded constants
used throughout the application.
"""
from typing import Literal, List
from dataclasses import dataclass
from pydantic import BaseModel

# Output format types
OutputFormat = Literal["json", "xml", "geojson"]
ElementType = Literal["node", "way", "relation"]

# Default configuration values
DEFAULT_OUTPUT_FORMAT: OutputFormat = "json"
SUPPORTED_OUTPUT_FORMATS: List[OutputFormat] = ["json", "xml", "geojson"]
SUPPORTED_ELEMENT_TYPES: List[ElementType] = ["node", "way", "relation"]

# API configuration
@dataclass
class ApiConfig:
    base_url: str = "https://overpass-api.de/api/interpreter"
    timeout: int = 60
    max_size: int = 1000000  # Max response size in bytes
    query_timeout: int = 25
    bbox_threshold: float = 1.0  # Threshold to warn about large bbox queries

DEFAULT_API_CONFIG = ApiConfig()

# Validation configuration
@dataclass
class ValidationConfig:
    enable_tag_validation: bool = True
    enable_syntax_validation: bool = True
    enable_area_resolution: bool = True
    enable_query_optimization: bool = True
    taginfo_base_url: str = "https://taginfo.openstreetmap.org/api/4"
    nominatim_base_url: str = "https://nominatim.openstreetmap.org"
    validation_timeout: int = 10  # seconds

DEFAULT_VALIDATION_CONFIG = ValidationConfig()

# OSM tag validation limits
MAX_TAG_KEY_LENGTH = 255
MAX_TAG_VALUE_LENGTH = 255
MIN_PROMPT_LENGTH = 5

# Overpass API limits
MAX_QUERY_TIMEOUT = 120
MIN_QUERY_TIMEOUT = 5
MAX_BBOX_QUERY_THRESHOLD = 5.0  # degrees

# Application settings
MIN_LATITUDE = -90.0
MAX_LATITUDE = 90.0
MIN_LONGITUDE = -180.0
MAX_LONGITUDE = 180.0

# Default area name for worldwide queries
WORLDWIDE_AREA_NAME = "world"

# Common OSM tag mappings for natural language processing
COMMON_TAG_MAPPINGS = {
    "cafe": ("amenity", "cafe"),
    "coffee": ("amenity", "cafe"),
    "restaurant": ("amenity", "restaurant"),
    "eat": ("amenity", "restaurant"),
    "parking": ("amenity", "parking"),
    "bicycle_parking": ("amenity", "bicycle_parking"),
    "library": ("amenity", "library"),
    "libraries": ("amenity", "library"),
    "school": ("amenity", "school"),
    "schools": ("amenity", "school"),
    "education": ("amenity", "school"),
    "educational": ("amenity", "school"),
    "university": ("amenity", "university"),
    "universities": ("amenity", "university"),
    "college": ("amenity", "college"),
    "colleges": ("amenity", "college"),
    "shop": ("shop", "yes"),
    "store": ("shop", "yes"),
}

# Overpass QL query templates
OVERPASS_QUERY_TEMPLATE = """// Generated by Overpass QL Generator
// Prompt: {prompt}

[out:{output_format}];
{area_definition}

(
{query_body}
);
out body;
>;
out skel qt;"""

# Area definition templates
AREA_DEFINITION_TEMPLATE = 'area[name="{area_name}"]->.searchArea;'
BBOX_FILTER_TEMPLATE = "({south},{west},{north},{east})"

# Overpass API response validation
REQUIRED_QUERY_ELEMENTS = ["out:"]
REQUIRED_OUTPUT_COMMANDS = ["out"]